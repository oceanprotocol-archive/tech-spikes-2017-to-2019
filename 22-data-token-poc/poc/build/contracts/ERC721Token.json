{
  "contractName": "ERC721Token",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/22-data-token-poc/poc/contracts/ERC721Token.sol\":\"ERC721Token\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/22-data-token-poc/poc/contracts/ERC721Token.sol\":{\"keccak256\":\"0x94ce1666876b7110f6daee21f355024798d0f517798f2adf89103b3d3175f7b8\",\"urls\":[\"bzzr://da49093b647cb2d30616d5f8b7f58d3b7e36a0972a787aae87cfe29dd85aef04\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzzr://da1a56c4891c4d01514d16a3d5535ca00ba5754ea23a5b9f59be788b8e99ce92\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzzr://07dffd4225b87bb0aa8d02cfdb04640c2e02e59b35143accd0dd757775449c61\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzzr://14f0ef90a240b2aca847fe1489b10965e04ba16cf221f52ed6470d0cad291f9d\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzzr://4950def18270142a78d503ef6b7b13bdb053f2f050cee50c883cd7cab2bb02d7\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x250605d58768f7b91ca896baa3001f0109d1c2dd071e97edfd6d9c0ca354a49a\",\"urls\":[\"bzzr://9e2f855cbfc319721a34811ad7881c3b59a5ad5cf63bd8b219dc1a36dde9b3e3\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0xa9a5f3d09b6258e143a6f697b640b4d05e602ee4b6ea9b92e504c02f3e7d927a\",\"urls\":[\"bzzr://c5ad5e7e09dc2f2a1353ee9ff425e076e431ee3b2374d2b33274ef7f6d200faf\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzzr://be001877b93536bd80b4ebf39bf5cd56ae5c294ffe5f35c34e26123646782562\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzzr://c05fd4bec1bdd4719ca843db39522d8710d81cbf5022a9950009cd18c504985c\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xb62b21b93eaf635c372306f05e273a404ae263d14c4e1e4217daf731254edc84\",\"urls\":[\"bzzr://79fca89f6d5481c322917f7c1e9037e98f7a97f8002611ae67f5df36b14d411e\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzzr://8a586d8fd1e36ecb1bebccdd5969e38fbf7d435cf9703ffc9647be8c97bf0d31\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzzr://8f483b76debd9f5948c445dcb83dac4c8b4881218776a6cd43ca07bd62f647de\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzzr://cd04ca8d050befdf06ac93c2f6f5ea7250d2199b44aecbe54ded512e823f711a\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001fd738038062001fd7833981018060405260408110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b505092919050505081818181620000ef6301ffc9a760e01b620001cb60201b60201c565b620001076380ac58cd60e01b620001cb60201b60201c565b6200011f63780e9d6360e01b620001cb60201b60201c565b8151620001349060099060208501906200029f565b5080516200014a90600a9060208401906200029f565b5062000163635b5e139f60e01b620001cb60201b60201c565b50505050620001776200029a60201b60201c565b600c80546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3505062000341565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200025d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002e257805160ff191683800117855562000312565b8280016001018555821562000312579182015b8281111562000312578251825591602001919060010190620002f5565b506200032092915062000324565b5090565b6200029c91905b808211156200032057600081556001016200032b565b611c8680620003516000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b41146103d9578063a22cb465146103e1578063b88d4fde1461040f578063c87b56dd146104d5578063e985e9c5146104f2578063f2fde38b1461052057610142565b80636352211e1461037e57806370a082311461039b578063715018a6146103c15780638da5cb5b146103c95780638f32d59b146103d157610142565b806323b872dd1161010a57806323b872dd146102805780632f745c59146102b657806340c10f19146102e257806342842e0e1461030e57806342966c68146103445780634f6ccce71461036157610142565b806301ffc9a71461014757806306fdde0314610182578063081812fc146101ff578063095ea7b31461023857806318160ddd14610266575b600080fd5b61016e6004803603602081101561015d57600080fd5b50356001600160e01b031916610546565b604080519115158252519081900360200190f35b61018a610565565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c45781810151838201526020016101ac565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61021c6004803603602081101561021557600080fd5b50356105fc565b604080516001600160a01b039092168252519081900360200190f35b6102646004803603604081101561024e57600080fd5b506001600160a01b038135169060200135610663565b005b61026e61078d565b60408051918252519081900360200190f35b6102646004803603606081101561029657600080fd5b506001600160a01b03813581169160208101359091169060400135610793565b61026e600480360360408110156102cc57600080fd5b506001600160a01b0381351690602001356107f4565b61016e600480360360408110156102f857600080fd5b506001600160a01b038135169060200135610876565b6102646004803603606081101561032457600080fd5b506001600160a01b0381358116916020810135909116906040013561088b565b6102646004803603602081101561035a57600080fd5b50356108a6565b61026e6004803603602081101561037757600080fd5b50356108b2565b61021c6004803603602081101561039457600080fd5b503561091c565b61026e600480360360208110156103b157600080fd5b50356001600160a01b031661097b565b6102646109e8565b61021c610a90565b61016e610a9f565b61018a610ac5565b610264600480360360408110156103f757600080fd5b506001600160a01b0381351690602001351515610b26565b6102646004803603608081101561042557600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561046057600080fd5b82018360208201111561047257600080fd5b8035906020019184600183028401116401000000008311171561049457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c28945050505050565b61018a600480360360208110156104eb57600080fd5b5035610c8b565b61016e6004803603604081101561050857600080fd5b506001600160a01b0381358116916020013516610d75565b6102646004803603602081101561053657600080fd5b50356001600160a01b0316610da3565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105f15780601f106105c6576101008083540402835291602001916105f1565b820191906000526020600020905b8154815290600101906020018083116105d457829003601f168201915b505050505090505b90565b600061060782610e0a565b151561064757604051600160e51b62461bcd02815260040180806020018281038252602c815260200180611b34602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061066e8261091c565b90506001600160a01b0383811690821614156106be57604051600160e51b62461bcd028152600401808060200182810382526021815260200180611bb86021913960400191505060405180910390fd5b806001600160a01b03166106d0610e27565b6001600160a01b031614806106f157506106f1816106ec610e27565b610d75565b151561073157604051600160e51b62461bcd028152600401808060200182810382526038815260200180611aa96038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6107a461079e610e27565b82610e2b565b15156107e457604051600160e51b62461bcd028152600401808060200182810382526031815260200180611bd96031913960400191505060405180910390fd5b6107ef838383610ed4565b505050565b60006107ff8361097b565b821061083f57604051600160e51b62461bcd02815260040180806020018281038252602b8152602001806119d6602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061086357fe5b9060005260206000200154905092915050565b60006108828383610ef3565b50600192915050565b6107ef83838360405180602001604052806000815250610c28565b6108af81610f11565b50565b60006108bc61078d565b82106108fc57604051600160e51b62461bcd02815260040180806020018281038252602c815260200180611c0a602c913960400191505060405180910390fd5b600780548390811061090a57fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b031680151561097557604051600160e51b62461bcd028152600401808060200182810382526029815260200180611b0b6029913960400191505060405180910390fd5b92915050565b60006001600160a01b03821615156109c757604051600160e51b62461bcd02815260040180806020018281038252602a815260200180611ae1602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061097590610f23565b6109f0610a9f565b1515610a465760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600c546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600c80546001600160a01b0319169055565b600c546001600160a01b031690565b600c546000906001600160a01b0316610ab6610e27565b6001600160a01b031614905090565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105f15780601f106105c6576101008083540402835291602001916105f1565b610b2e610e27565b6001600160a01b0383811691161415610b915760408051600160e51b62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610b9e610e27565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610be2610e27565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610c39610c33610e27565b83610e2b565b1515610c7957604051600160e51b62461bcd028152600401808060200182810382526031815260200180611bd96031913960400191505060405180910390fd5b610c8584848484610f27565b50505050565b6060610c9682610e0a565b1515610cd657604051600160e51b62461bcd02815260040180806020018281038252602f815260200180611b89602f913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b50505050509050919050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b610dab610a9f565b1515610e015760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6108af81610f7e565b6000908152600160205260409020546001600160a01b0316151590565b3390565b6000610e3682610e0a565b1515610e7657604051600160e51b62461bcd02815260040180806020018281038252602c815260200180611a7d602c913960400191505060405180910390fd5b6000610e818361091c565b9050806001600160a01b0316846001600160a01b03161480610ebc5750836001600160a01b0316610eb1846105fc565b6001600160a01b0316145b80610ecc5750610ecc8185610d75565b949350505050565b610edf838383611024565b610ee98382611170565b6107ef8282611267565b610f0d8282604051806020016040528060008152506112a5565b5050565b6108af610f1d8261091c565b826112fc565b5490565b610f32848484610ed4565b610f3e84848484611344565b1515610c8557604051600160e51b62461bcd028152600401808060200182810382526032815260200180611a016032913960400191505060405180910390fd5b6001600160a01b0381161515610fc857604051600160e51b62461bcd028152600401808060200182810382526026815260200180611a336026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b03166110378261091c565b6001600160a01b03161461107f57604051600160e51b62461bcd028152600401808060200182810382526029815260200180611b606029913960400191505060405180910390fd5b6001600160a01b03821615156110c957604051600160e51b62461bcd028152600401808060200182810382526024815260200180611a596024913960400191505060405180910390fd5b6110d2816114a0565b6001600160a01b03831660009081526003602052604090206110f3906114db565b6001600160a01b0382166000908152600360205260409020611114906114f2565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821660009081526005602052604081205461119a90600163ffffffff6114fb16565b600083815260066020526040902054909150808214611237576001600160a01b03841660009081526005602052604081208054849081106111d757fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110151561121757fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490611260906000198301611953565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6112af8383611544565b6112bc6000848484611344565b15156107ef57604051600160e51b62461bcd028152600401808060200182810382526032815260200180611a016032913960400191505060405180910390fd5b6113068282611561565b6000818152600b60205260409020546002600019610100600184161502019091160415610f0d576000818152600b60205260408120610f0d91611977565b6000611358846001600160a01b031661158d565b151561136657506001610ecc565b6000846001600160a01b031663150b7a0261137f610e27565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114045781810151838201526020016113ec565b50505050905090810190601f1680156114315780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561145357600080fd5b505af1158015611467573d6000803e3d6000fd5b505050506040513d602081101561147d57600080fd5b50516001600160e01b031916600160e11b630a85bd010214915050949350505050565b6000818152600260205260409020546001600160a01b0316156108af57600090815260026020526040902080546001600160a01b0319169055565b80546114ee90600163ffffffff6114fb16565b9055565b80546001019055565b600061153d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115c4565b9392505050565b61154e828261165e565b6115588282611267565b610f0d81611797565b61156b82826117db565b6115758282611170565b600081815260066020526040812055610f0d816118b5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610ecc5750141592915050565b6000818484111561165657604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561161b578181015183820152602001611603565b50505050905090810190601f1680156116485780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b03821615156116be5760408051600160e51b62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6116c781610e0a565b1561171c5760408051600160e51b62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526003909152902061175b906114f2565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b816001600160a01b03166117ee8261091c565b6001600160a01b03161461183657604051600160e51b62461bcd028152600401808060200182810382526025815260200180611c366025913960400191505060405180910390fd5b61183f816114a0565b6001600160a01b0382166000908152600360205260409020611860906114db565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6007546000906118cc90600163ffffffff6114fb16565b600083815260086020526040812054600780549394509092849081106118ee57fe5b906000526020600020015490508060078381548110151561190b57fe5b6000918252602080832090910192909255828152600890915260409020829055600780549061193e906000198301611953565b50505060009182525060086020526040812055565b8154818355818111156107ef576000838152602090206107ef9181019083016119b7565b50805460018160011615610100020316600290046000825580601f1061199d57506108af565b601f0160209004906000526020600020908101906108af91905b6105f991905b808211156119d157600081556001016119bd565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776ea165627a7a7230582045b58f997ad4fa7113222c77526aff9aa5032b973b740cf0588f3453663c90b60029",
  "deployedBytecode": "",
  "sourceMap": "234:439:2:-;;;301:97;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:97:2;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;301:97:2;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;301:97:2;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;301:97:2;;;;;;371:4;377:6;533:4:16;539:6;718:40:6;385:10;737:20;;718:18;;;:40;;:::i;:::-;2262::13;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;1357:51:15;1172:10;1376:31;;1357:18;;;:51;;:::i;:::-;866:12:17;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;888:16:17;;;;:7;;:16;;;;;:::i;:::-;;992:49;728:10;1011:29;;992:18;;;:49;;:::i;:::-;794:254;;456:155:16;;707:12:9;:10;;;:12;;:::i;:::-;698:6;:21;;-1:-1:-1;;;;;;698:21:9;-1:-1:-1;;;;;698:21:9;;;;;;;;734:40;;767:6;;;-1:-1:-1;;734:40:9;;-1:-1:-1;;734:40:9;301:97:2;;234:439;;1442:190:6;-1:-1:-1;;;;;;1517:25:6;;;;;1509:66;;;;;-1:-1:-1;;;;;1509:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:6;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:6;1621:4;1585:40;;;1442:190::o;788:96:4:-;867:10;788:96;;:::o;234:439:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;234:439:2;;;-1:-1:-1;234:439:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "234:439:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:439:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:6;-1:-1:-1;;;;;;915:133:6;;:::i;:::-;;;;;;;;;;;;;;;;;;1153:83:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1153:83:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4283:200:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4283:200:13;;:::i;:::-;;;;-1:-1:-1;;;;;4283:200:13;;;;;;;;;;;;;;3583:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3583:415:13;;-1:-1:-1;;;;;3583:415:13;;;;;;:::i;:::-;;2171:94:15;;;:::i;:::-;;;;;;;;;;;;;;;;5929:287:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5929:287:13;;;;;;;;;;;;;;;;;:::i;1789:229:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1789:229:15;;-1:-1:-1;;;;;1789:229:15;;;;;;:::i;404:135:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;404:135:2;;-1:-1:-1;;;;;404:135:2;;;;;;:::i;6865:132:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6865:132:13;;;;;;;;;;;;;;;;;:::i;543:127:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;543:127:2;;:::i;2603:196:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2603:196:15;;:::i;2939:223:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2939:223:13;;:::i;2513:207::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2513:207:13;-1:-1:-1;;;;;2513:207:13;;:::i;1642:137:9:-;;;:::i;857:77::-;;;:::i;1208:92::-;;;:::i;1345:87:17:-;;;:::i;4776:249:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4776:249:13;;-1:-1:-1;;;;;4776:249:13;;;;;;;;:::i;7720:269::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7720:269:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7720:269:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7720:269:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7720:269:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7720:269:13;;-1:-1:-1;7720:269:13;;-1:-1:-1;;;;;7720:269:13:i;1632:202:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1632:202:17;;:::i;5347:145:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5347:145:13;;;;;;;;;;:::i;1928:107:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1928:107:9;-1:-1:-1;;;;;1928:107:9;;:::i;915:133:6:-;-1:-1:-1;;;;;;1008:33:6;985:4;1008:33;;;;;;;;;;;;;;915:133::o;1153:83:17:-;1224:5;1217:12;;;;;;;;;;;;;-1:-1:-1;;1217:12:17;;;;;;;;;;;;;;;;;;;;;;;;;;1192:13;;1217:12;;1224:5;;1217:12;;;1224:5;1217:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:83;;:::o;4283:200:13:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;-1:-1:-1;;;;;4361:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4452:24:13;;;;:15;:24;;;;;;-1:-1:-1;;;;;4452:24:13;;4283:200::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;-1:-1:-1;;;;;;3696:11:13;;;;;;;;3688:57;;;;-1:-1:-1;;;;;3688:57:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3764:21:13;;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3764:21:13;;;:62;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3756:152;;;;;;-1:-1:-1;;;;;3756:152:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3919:29:13;-1:-1:-1;;;;;3919:29:13;;;;;;;;;3963:28;;3919:24;;3963:28;;;;;;;3583:415;;;:::o;2171:94:15:-;2241:10;:17;2171:94;:::o;5929:287:13:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;-1:-1:-1;;;;;6063:103:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;1789:229:15:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:24;;1888:80;;;;-1:-1:-1;;;;;1888:80:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1985:19:15;;;;;;:12;:19;;;;;:26;;2005:5;;1985:26;;;;;;;;;;;;;;1978:33;;1789:229;;;;:::o;404:135:2:-;463:4;483:28;499:2;503:7;483:15;:28::i;:::-;-1:-1:-1;528:4:2;404:135;;;;:::o;6865:132:13:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;543:127:2:-;643:20;655:7;643:11;:20::i;:::-;543:127;:::o;2603:196:15:-;2661:7;2696:13;:11;:13::i;:::-;2688:21;;2680:78;;;;-1:-1:-1;;;;;2680:78:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2775:10;:17;;2786:5;;2775:17;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;2939:223:13:-;2994:7;3029:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3029:20:13;3067:19;;;3059:73;;;;-1:-1:-1;;;;;3059:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:5;2939:223;-1:-1:-1;;2939:223:13:o;2513:207::-;2568:7;-1:-1:-1;;;;;2595:19:13;;;;2587:74;;;;-1:-1:-1;;;;;2587:74:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2679:24:13;;;;;;:17;:24;;;;;:34;;:32;:34::i;1642:137:9:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;-1:-1:-1;;;;;1053:54:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1724:6;;1703:40;;1740:1;;-1:-1:-1;;;;;1724:6:9;;1703:40;;1740:1;;1703:40;1753:6;:19;;-1:-1:-1;;;;;;1753:19:9;;;1642:137::o;857:77::-;921:6;;-1:-1:-1;;;;;921:6:9;;857:77::o;1208:92::-;1287:6;;1248:4;;-1:-1:-1;;;;;1287:6:9;1271:12;:10;:12::i;:::-;-1:-1:-1;;;;;1271:22:9;;;1208:92;-1:-1:-1;1208:92:9:o;1345:87:17:-;1418:7;1411:14;;;;;;;;;;;;;-1:-1:-1;;1411:14:17;;;;;;;;;;;;;;;;;;;;;;;;;;1386:13;;1411:14;;1418:7;;1411:14;;;1418:7;1411:14;;;;;;;;;;;;;;;;;;;;;;;;4776:249:13;4861:12;:10;:12::i;:::-;-1:-1:-1;;;;;4855:18:13;;;;;;;4847:56;;;;;-1:-1:-1;;;;;4847:56:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;-1:-1:-1;;;;;4914:32:13;;;;;;;;;;;;;;;;;-1:-1:-1;4914:32:13;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4914:47:13;;;;;;;;;;;4991:12;:10;:12::i;:::-;4976:42;;;;;;;;;;-1:-1:-1;;;;;4976:42:13;;;;;;;;;;;;;;4776:249;;:::o;7720:269::-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;-1:-1:-1;;;;;7826:103:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1632:202:17:-;1690:13;1723:16;1731:7;1723;:16::i;:::-;1715:76;;;;;;-1:-1:-1;;;;;1715:76:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:19;;;;:10;:19;;;;;;;;;1801:26;;;;;;;;;;;-1:-1:-1;;1801:26:17;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:19;;1801:26;;1808:19;1801:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:202;;;:::o;5347:145:13:-;-1:-1:-1;;;;;5450:25:13;;;5427:4;5450:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5347:145::o;1928:107:9:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;-1:-1:-1;;;;;1053:54:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;9158:152:13:-;9215:4;9247:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9247:20:13;9284:19;;;9158:152::o;788:96:4:-;867:10;788:96;:::o;9671:329:13:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;-1:-1:-1;;;;;9772:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;-1:-1:-1;;;;;;9905:16:13;;;;;;;;:51;;-1:-1:-1;;;;;;9925:31:13;;:20;9937:7;9925:11;:20::i;:::-;-1:-1:-1;;;;;9925:31:13;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9897:96;9671:329;-1:-1:-1;;;;9671:329:13:o;3174:239:15:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;10529:100:13:-;10596:26;10606:2;10610:7;10596:26;;;;;;;;;;;;:9;:26::i;:::-;10529:100;;:::o;12814:90::-;12865:32;12871:16;12879:7;12871;:16::i;:::-;12889:7;12865:5;:32::i;1065:112:5:-;1156:14;;1065:112::o;8694:269:13:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;-1:-1:-1;;;;;8845:111:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2136:225:9;-1:-1:-1;;;;;2209:22:9;;;;2201:73;;;;-1:-1:-1;;;;;2201:73:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:6;;2289:38;;-1:-1:-1;;;;;2289:38:9;;;;2310:6;;2289:38;;2310:6;;2289:38;2337:6;:17;;-1:-1:-1;;;;;;2337:17:9;-1:-1:-1;;;;;2337:17:9;;;;;;;;;;2136:225::o;13281:447:13:-;-1:-1:-1;;;;;13374:24:13;;:16;13382:7;13374;:16::i;:::-;-1:-1:-1;;;;;13374:24:13;;13366:78;;;;-1:-1:-1;;;;;13366:78:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13462:16:13;;;;13454:65;;;;-1:-1:-1;;;;;13454:65:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;-1:-1:-1;;;;;13564:23:13;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13609:21:13;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13653:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13653:25:13;-1:-1:-1;;;;;13653:25:13;;;;;;;;;13694:27;;13653:20;;13694:27;;;;;;;13281:447;;;:::o;6284:1128:15:-;-1:-1:-1;;;;;6571:18:15;;6546:22;6571:18;;;:12;:18;;;;;:25;:32;;-1:-1:-1;6571:29:15;:32::i;:::-;6613:18;6634:26;;;:17;:26;;;;;;6546:57;;-1:-1:-1;6764:28:15;;;6760:323;;-1:-1:-1;;;;;6830:18:15;;6808:19;6830:18;;;:12;:18;;;;;:34;;6849:14;;6830:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6879:18:15;;;;:12;:18;;;;;;;:30;;6830:34;;-1:-1:-1;6830:34:15;;6898:10;;6879:30;;;;;;;;;;;;;;;;;:44;;;;6995:30;;;:17;:30;;;;;:43;;;6760:323;-1:-1:-1;;;;;7169:18:15;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7169:27:15;;;:::i;:::-;;6284:1128;;;;:::o;5128:183::-;-1:-1:-1;;;;;5241:16:15;;;;;;;;:12;:16;;;;;;;;:23;;5212:26;;;:17;:26;;;;;:52;;;5274:16;;;-1:-1:-1;23:18;;45:23;;5274:30:15;;;;;;;;5128:183::o;11230:239:13:-;11317:18;11323:2;11327:7;11317:5;:18::i;:::-;11353:54;11384:1;11388:2;11392:7;11401:5;11353:22;:54::i;:::-;11345:117;;;;;;-1:-1:-1;;;;;11345:117:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2558:240:17;2624:27;2636:5;2643:7;2624:11;:27::i;:::-;2707:19;;;;:10;:19;;;;;2701:33;;;;;;;;-1:-1:-1;;2701:33:17;;;;;:38;2697:95;;2762:19;;;;:10;:19;;;;;2755:26;;;:::i;14317:349:13:-;14438:4;14463:15;-1:-1:-1;;;;;14463:13:13;;;:15::i;:::-;14462:16;14458:58;;;-1:-1:-1;14501:4:13;14494:11;;14458:58;14526:13;-1:-1:-1;;;;;14542:36:13;;;14579:12;:10;:12::i;:::-;14542:72;;;;;;;;;-1:-1:-1;;;;;14542:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:4;;14599:7;;14608:5;;14542:72;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14542:72:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14542:72:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14542:72:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14542:72:13;-1:-1:-1;;;;;;14632:26:13;-1:-1:-1;;;;;14632:26:13;;;-1:-1:-1;;;;;;14317:349:13:o;14828:171::-;14927:1;14891:24;;;:15;:24;;;;;;-1:-1:-1;;;;;14891:24:13;:38;14887:106;;14980:1;14945:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;14945:37:13;;;14828:171::o;1278:108:5:-;1358:14;;:21;;1377:1;1358:21;:18;:21;:::i;:::-;1341:38;;1278:108::o;1183:89::-;1246:19;;1264:1;1246:19;;;1183:89::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:8:o;3670:196:15:-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;4141:364::-;4207:27;4219:5;4226:7;4207:11;:27::i;:::-;4245:48;4278:5;4285:7;4245:32;:48::i;:::-;4441:1;4412:26;;;:17;:26;;;;;:30;4453:45;4430:7;4453:36;:45::i;557:797:22:-;617:4;1265:20;;1110:66;1304:15;;;;;:42;;-1:-1:-1;1323:23:22;;;1296:51;-1:-1:-1;;557:797:22:o;1732:187:8:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;;;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:8;;;1732:187::o;11714:327:13:-;-1:-1:-1;;;;;11785:16:13;;;;11777:61;;;;;-1:-1:-1;;;;;11777:61:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;-1:-1:-1;;;;;11848:58:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;11917:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;11917:25:13;-1:-1:-1;;;;;11917:25:13;;;;;;;;11952:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12001;;12026:7;;-1:-1:-1;;;;;12001:33:13;;;12018:1;;12001:33;;12018:1;;12001:33;11714:327;;:::o;5506:161:15:-;5609:10;:17;;5582:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5636:24:15;;;;;;;5506:161::o;12309:324:13:-;-1:-1:-1;;;;;12383:25:13;;:16;12391:7;12383;:16::i;:::-;-1:-1:-1;;;;;12383:25:13;;12375:75;;;;-1:-1:-1;;;;;12375:75:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12461:23;12476:7;12461:14;:23::i;:::-;-1:-1:-1;;;;;12495:24:13;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;12572:1;12541:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;12541:33:13;;;12590:36;12541:20;;12572:1;-1:-1:-1;;;;;12590:36:13;;;;;12572:1;;12590:36;12309:324;;:::o;7700:1064:15:-;7974:10;:17;7949:22;;7974:24;;7996:1;7974:24;:21;:24;:::i;:::-;8008:18;8029:24;;;:15;:24;;;;;;8397:10;:26;;7949:49;;-1:-1:-1;8029:24:15;;7949:49;;8397:26;;;;;;;;;;;;;;8375:48;;8459:11;8434:10;8445;8434:22;;;;;;;;;;;;;;;;;;;;;:36;;;;8538:28;;;:15;:28;;;;;;:41;;;8700:10;:19;;;;;-1:-1:-1;;8700:19:15;;;:::i;:::-;-1:-1:-1;;;8756:1:15;8729:24;;;-1:-1:-1;8729:15:15;:24;;;;;:28;7700:1064::o;234:439:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport 'openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol';\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\n\ncontract ERC721Token is ERC721Full, ERC721Burnable, Ownable {\n\n    constructor (string memory name, string memory symbol)\n    ERC721Full(name, symbol)\n    public {}\n\n    function mint(address to, uint256 tokenId) public returns (bool) {\n            super._safeMint(to, tokenId);\n        return true;\n    }\n\n  function burn(uint256 tokenId) public {\n        //solhint-disable-next-line max-line-length\n        super._burn(tokenId);\n    }\n\n}\n\n\n\n",
  "sourcePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/22-data-token-poc/poc/contracts/ERC721Token.sol",
  "ast": {
    "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/22-data-token-poc/poc/contracts/ERC721Token.sol",
    "exportedSymbols": {
      "ERC721Token": [
        713
      ]
    },
    "id": 714,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 660,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 661,
        "nodeType": "ImportDirective",
        "scope": 714,
        "sourceUnit": 2771,
        "src": "25:69:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 662,
        "nodeType": "ImportDirective",
        "scope": 714,
        "sourceUnit": 2407,
        "src": "95:73:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 663,
        "nodeType": "ImportDirective",
        "scope": 714,
        "sourceUnit": 1210,
        "src": "169:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 664,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2770,
              "src": "258:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2770",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 665,
            "nodeType": "InheritanceSpecifier",
            "src": "258:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 666,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2406,
              "src": "270:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$2406",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 667,
            "nodeType": "InheritanceSpecifier",
            "src": "270:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 668,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1209,
              "src": "286:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1209",
                "typeString": "contract Ownable"
              }
            },
            "id": 669,
            "nodeType": "InheritanceSpecifier",
            "src": "286:7:2"
          }
        ],
        "contractDependencies": [
          797,
          898,
          908,
          1209,
          2378,
          2406,
          2746,
          2770,
          2902,
          3005,
          3032,
          3055
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 713,
        "linearizedBaseContracts": [
          713,
          1209,
          2406,
          2770,
          2902,
          3055,
          2746,
          3032,
          2378,
          3005,
          898,
          908,
          797
        ],
        "name": "ERC721Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "396:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 681,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 676,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 671,
                    "src": "371:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 677,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 673,
                    "src": "377:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 678,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 675,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2770,
                  "src": "360:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$2770_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "360:24:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "314:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "334:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "313:42:2"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:2"
            },
            "scope": 713,
            "src": "301:97:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 699,
              "nodeType": "Block",
              "src": "469:70:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 693,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "499:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "503:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 690,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3208,
                        "src": "483:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Token_$713",
                          "typeString": "contract super ERC721Token"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2130,
                      "src": "483:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "483:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "483:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "528:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 689,
                  "id": 698,
                  "nodeType": "Return",
                  "src": "521:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "418:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "418:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "430:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "417:29:2"
            },
            "returnParameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "463:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:6:2"
            },
            "scope": 713,
            "src": "404:135:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "581:89:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 708,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "655:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 705,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3208,
                        "src": "643:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Token_$713",
                          "typeString": "contract super ERC721Token"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2258,
                      "src": "643:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "643:20:2"
                }
              ]
            },
            "documentation": null,
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "557:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:17:2"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:2"
            },
            "scope": 713,
            "src": "543:127:2",
            "stateMutability": "nonpayable",
            "superFunction": 2405,
            "visibility": "public"
          }
        ],
        "scope": 714,
        "src": "234:439:2"
      }
    ],
    "src": "0:677:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/22-data-token-poc/poc/contracts/ERC721Token.sol",
    "exportedSymbols": {
      "ERC721Token": [
        713
      ]
    },
    "id": 714,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 660,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 661,
        "nodeType": "ImportDirective",
        "scope": 714,
        "sourceUnit": 2771,
        "src": "25:69:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 662,
        "nodeType": "ImportDirective",
        "scope": 714,
        "sourceUnit": 2407,
        "src": "95:73:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 663,
        "nodeType": "ImportDirective",
        "scope": 714,
        "sourceUnit": 1210,
        "src": "169:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 664,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2770,
              "src": "258:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2770",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 665,
            "nodeType": "InheritanceSpecifier",
            "src": "258:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 666,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2406,
              "src": "270:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$2406",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 667,
            "nodeType": "InheritanceSpecifier",
            "src": "270:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 668,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1209,
              "src": "286:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1209",
                "typeString": "contract Ownable"
              }
            },
            "id": 669,
            "nodeType": "InheritanceSpecifier",
            "src": "286:7:2"
          }
        ],
        "contractDependencies": [
          797,
          898,
          908,
          1209,
          2378,
          2406,
          2746,
          2770,
          2902,
          3005,
          3032,
          3055
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 713,
        "linearizedBaseContracts": [
          713,
          1209,
          2406,
          2770,
          2902,
          3055,
          2746,
          3032,
          2378,
          3005,
          898,
          908,
          797
        ],
        "name": "ERC721Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "396:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 681,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 676,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 671,
                    "src": "371:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 677,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 673,
                    "src": "377:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 678,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 675,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2770,
                  "src": "360:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$2770_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "360:24:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "314:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "334:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "313:42:2"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:2"
            },
            "scope": 713,
            "src": "301:97:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 699,
              "nodeType": "Block",
              "src": "469:70:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 693,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "499:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "503:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 690,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3208,
                        "src": "483:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Token_$713",
                          "typeString": "contract super ERC721Token"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_safeMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2130,
                      "src": "483:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "483:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "483:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "528:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 689,
                  "id": 698,
                  "nodeType": "Return",
                  "src": "521:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "418:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "418:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "430:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "417:29:2"
            },
            "returnParameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "463:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:6:2"
            },
            "scope": 713,
            "src": "404:135:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "581:89:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 708,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "655:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 705,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3208,
                        "src": "643:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Token_$713",
                          "typeString": "contract super ERC721Token"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2258,
                      "src": "643:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "643:20:2"
                }
              ]
            },
            "documentation": null,
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "557:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:17:2"
            },
            "returnParameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:2"
            },
            "scope": 713,
            "src": "543:127:2",
            "stateMutability": "nonpayable",
            "superFunction": 2405,
            "visibility": "public"
          }
        ],
        "scope": 714,
        "src": "234:439:2"
      }
    ],
    "src": "0:677:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-25T23:15:10.017Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}