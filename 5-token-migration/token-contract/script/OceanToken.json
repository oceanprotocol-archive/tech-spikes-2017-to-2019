{
  "contractName": "OceanToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x355274ea"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x983b2d56"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98650275"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa271e1a"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event",
      "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event",
      "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    }
  ],
  "bytecode": "0x608060405263540ae48060098190556200003090670de0b6b3a764000064010000000062000ca36200018582021704565b600a553480156200004057600080fd5b50600a80546040805180820182529283527f4f6365616e546f6b656e0000000000000000000000000000000000000000000060208085019190915281518083018352600581527f4f4345414e0000000000000000000000000000000000000000000000000000009181019190915260008054600160a060020a031916331780825592519394939192601292600160a060020a039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3825162000113906001906020860190620003d7565b50815162000129906002906020850190620003d7565b506003805460ff191660ff929092169190911790555062000155905033640100000000620001bd810204565b600081116200016357600080fd5b600855600a546200017f9033906401000000006200020f810204565b62000479565b60008215156200019857506000620001b7565b828202828482811515620001a857fe5b0414620001b457600080fd5b90505b92915050565b620001d860078264010000000062000c096200026982021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6008546200023f826200022a640100000000620002c4810204565b90640100000000620009cc620002cb82021704565b11156200024b57600080fd5b62000265828264010000000062000b5d620002de82021704565b5050565b600160a060020a03811615156200027f57600080fd5b6200029482826401000000006200039f810204565b156200029f57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6006545b90565b600082820183811015620001b457600080fd5b600160a060020a0382161515620002f457600080fd5b600654620003119082640100000000620009cc620002cb82021704565b600655600160a060020a038216600090815260046020526040902054620003479082640100000000620009cc620002cb82021704565b600160a060020a03831660008181526004602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000600160a060020a0382161515620003b757600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041a57805160ff19168380011785556200044a565b828001600101855582156200044a579182015b828111156200044a5782518255916020019190600101906200042d565b50620004589291506200045c565b5090565b620002c891905b8082111562000458576000815560010162000463565b610cfa80620004896000396000f3fe608060405234801561001057600080fd5b5060043610610149576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100ca578063a457c2d71161008e578063a457c2d71461036b578063a9059cbb14610397578063aa271e1a146103c3578063dd62ed3e146103e9578063f2fde38b1461041757610149565b80638da5cb5b146103095780638f32d59b1461032d57806395d89b4114610335578063983b2d561461033d578063986502751461036357610149565b8063355274ea11610111578063355274ea14610279578063395093511461028157806340c10f19146102ad57806370a08231146102d9578063715018a6146102ff57610149565b806306fdde031461014e578063095ea7b3146101cb57806318160ddd1461020b57806323b872dd14610225578063313ce5671461025b575b600080fd5b61015661043d565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f7600480360360408110156101e157600080fd5b50600160a060020a0381351690602001356104d2565b604080519115158252519081900360200190f35b610213610551565b60408051918252519081900360200190f35b6101f76004803603606081101561023b57600080fd5b50600160a060020a03813581169160208101359091169060400135610557565b610263610620565b6040805160ff9092168252519081900360200190f35b610213610629565b6101f76004803603604081101561029757600080fd5b50600160a060020a03813516906020013561062f565b6101f7600480360360408110156102c357600080fd5b50600160a060020a0381351690602001356106df565b610213600480360360208110156102ef57600080fd5b5035600160a060020a0316610708565b610307610723565b005b61031161078d565b60408051600160a060020a039092168252519081900360200190f35b6101f761079c565b6101566107ad565b6103076004803603602081101561035357600080fd5b5035600160a060020a031661080b565b61030761082b565b6101f76004803603604081101561038157600080fd5b50600160a060020a038135169060200135610836565b6101f7600480360360408110156103ad57600080fd5b50600160a060020a038135169060200135610881565b6101f7600480360360208110156103d957600080fd5b5035600160a060020a031661088e565b610213600480360360408110156103ff57600080fd5b50600160a060020a03813581169160200135166108a1565b6103076004803603602081101561042d57600080fd5b5035600160a060020a03166108cc565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b5050505050905090565b6000600160a060020a03831615156104e957600080fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60065490565b600160a060020a038316600090815260056020908152604080832033845290915281205461058b908363ffffffff6108e816565b600160a060020a03851660009081526005602090815260408083203384529091529020556105ba8484846108fd565b600160a060020a0384166000818152600560209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60035460ff1690565b60085490565b6000600160a060020a038316151561064657600080fd5b336000908152600560209081526040808320600160a060020a038716845290915290205461067a908363ffffffff6109cc16565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106ea3361088e565b15156106f557600080fd5b6106ff83836109e5565b50600192915050565b600160a060020a031660009081526004602052604090205490565b61072b61079c565b151561073657600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156104c85780601f1061049d576101008083540402835291602001916104c8565b6108143361088e565b151561081f57600080fd5b61082881610a19565b50565b61083433610a61565b565b6000600160a060020a038316151561084d57600080fd5b336000908152600560209081526040808320600160a060020a038716845290915290205461067a908363ffffffff6108e816565b60006106ff3384846108fd565b600061054b60078363ffffffff610aa916565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b6108d461079c565b15156108df57600080fd5b61082881610ae0565b6000828211156108f757600080fd5b50900390565b600160a060020a038216151561091257600080fd5b600160a060020a03831660009081526004602052604090205461093b908263ffffffff6108e816565b600160a060020a038085166000908152600460205260408082209390935590841681522054610970908263ffffffff6109cc16565b600160a060020a0380841660008181526004602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156109de57600080fd5b9392505050565b600854610a00826109f4610551565b9063ffffffff6109cc16565b1115610a0b57600080fd5b610a158282610b5d565b5050565b610a2a60078263ffffffff610c0916565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a7260078263ffffffff610c5716565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610ac057600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610af557600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0382161515610b7257600080fd5b600654610b85908263ffffffff6109cc16565b600655600160a060020a038216600090815260046020526040902054610bb1908263ffffffff6109cc16565b600160a060020a03831660008181526004602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a0381161515610c1e57600080fd5b610c288282610aa9565b15610c3257600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610c6c57600080fd5b610c768282610aa9565b1515610c8157600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6000821515610cb45750600061054b565b828202828482811515610cc357fe5b04146109de57600080fdfea165627a7a7230582063b76a0f09d4154b129d964866fca55c72f33150fdc45f1f42796ab6fd895cb20029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610149576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100ca578063a457c2d71161008e578063a457c2d71461036b578063a9059cbb14610397578063aa271e1a146103c3578063dd62ed3e146103e9578063f2fde38b1461041757610149565b80638da5cb5b146103095780638f32d59b1461032d57806395d89b4114610335578063983b2d561461033d578063986502751461036357610149565b8063355274ea11610111578063355274ea14610279578063395093511461028157806340c10f19146102ad57806370a08231146102d9578063715018a6146102ff57610149565b806306fdde031461014e578063095ea7b3146101cb57806318160ddd1461020b57806323b872dd14610225578063313ce5671461025b575b600080fd5b61015661043d565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610190578181015183820152602001610178565b50505050905090810190601f1680156101bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f7600480360360408110156101e157600080fd5b50600160a060020a0381351690602001356104d2565b604080519115158252519081900360200190f35b610213610551565b60408051918252519081900360200190f35b6101f76004803603606081101561023b57600080fd5b50600160a060020a03813581169160208101359091169060400135610557565b610263610620565b6040805160ff9092168252519081900360200190f35b610213610629565b6101f76004803603604081101561029757600080fd5b50600160a060020a03813516906020013561062f565b6101f7600480360360408110156102c357600080fd5b50600160a060020a0381351690602001356106df565b610213600480360360208110156102ef57600080fd5b5035600160a060020a0316610708565b610307610723565b005b61031161078d565b60408051600160a060020a039092168252519081900360200190f35b6101f761079c565b6101566107ad565b6103076004803603602081101561035357600080fd5b5035600160a060020a031661080b565b61030761082b565b6101f76004803603604081101561038157600080fd5b50600160a060020a038135169060200135610836565b6101f7600480360360408110156103ad57600080fd5b50600160a060020a038135169060200135610881565b6101f7600480360360208110156103d957600080fd5b5035600160a060020a031661088e565b610213600480360360408110156103ff57600080fd5b50600160a060020a03813581169160200135166108a1565b6103076004803603602081101561042d57600080fd5b5035600160a060020a03166108cc565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b5050505050905090565b6000600160a060020a03831615156104e957600080fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60065490565b600160a060020a038316600090815260056020908152604080832033845290915281205461058b908363ffffffff6108e816565b600160a060020a03851660009081526005602090815260408083203384529091529020556105ba8484846108fd565b600160a060020a0384166000818152600560209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60035460ff1690565b60085490565b6000600160a060020a038316151561064657600080fd5b336000908152600560209081526040808320600160a060020a038716845290915290205461067a908363ffffffff6109cc16565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106ea3361088e565b15156106f557600080fd5b6106ff83836109e5565b50600192915050565b600160a060020a031660009081526004602052604090205490565b61072b61079c565b151561073657600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156104c85780601f1061049d576101008083540402835291602001916104c8565b6108143361088e565b151561081f57600080fd5b61082881610a19565b50565b61083433610a61565b565b6000600160a060020a038316151561084d57600080fd5b336000908152600560209081526040808320600160a060020a038716845290915290205461067a908363ffffffff6108e816565b60006106ff3384846108fd565b600061054b60078363ffffffff610aa916565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b6108d461079c565b15156108df57600080fd5b61082881610ae0565b6000828211156108f757600080fd5b50900390565b600160a060020a038216151561091257600080fd5b600160a060020a03831660009081526004602052604090205461093b908263ffffffff6108e816565b600160a060020a038085166000908152600460205260408082209390935590841681522054610970908263ffffffff6109cc16565b600160a060020a0380841660008181526004602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156109de57600080fd5b9392505050565b600854610a00826109f4610551565b9063ffffffff6109cc16565b1115610a0b57600080fd5b610a158282610b5d565b5050565b610a2a60078263ffffffff610c0916565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a7260078263ffffffff610c5716565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610ac057600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610af557600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0382161515610b7257600080fd5b600654610b85908263ffffffff6109cc16565b600655600160a060020a038216600090815260046020526040902054610bb1908263ffffffff6109cc16565b600160a060020a03831660008181526004602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a0381161515610c1e57600080fd5b610c288282610aa9565b15610c3257600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610c6c57600080fd5b610c768282610aa9565b1515610c8157600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b6000821515610cb45750600061054b565b828202828482811515610cc357fe5b04146109de57600080fdfea165627a7a7230582063b76a0f09d4154b129d964866fca55c72f33150fdc45f1f42796ab6fd895cb20029",
  "sourceMap": "362:398:1:-;;;469:10;455:24;;;;504:17;;512:8;504:7;;;;;;:17;:::i;:::-;482:39;;613:144;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;693:11:1;;;405:163:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;515:19:5;;-1:-1:-1;;;;;;515:19:5;524:10;515:19;;;;549:40;;693:11:1;;405:163:8;;;675:2:1;;-1:-1:-1;;;;;582:6:5;;;;;-1:-1:-1;549:40:5;;-1:-1:-1;;549:40:5;493:12:8;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;515:16:8;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:8;:20;;-1:-1:-1;;541:20:8;;;;;;;;;;;;-1:-1:-1;275:22:3;;-1:-1:-1;286:10:3;275;;;;:22;:::i;:::-;256:1:7;250:7;;242:16;;;;;;268:4;:10;741:11:1;;723:30;;729:10;;723:5;;;;:30;:::i;:::-;362:398;;229:421:4;287:7;527:6;;523:45;;;-1:-1:-1;556:1:4;549:8;;523:45;590:5;;;594:1;590;:5;613;;;;;;;;:10;605:19;;;;;;642:1;-1:-1:-1;229:421:4;;;;;:::o;685:119:3:-;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:3;;;;;;;;685:119;:::o;432:151:7:-;534:4;;506:24;524:5;506:13;:11;;;;:13;:::i;:::-;:17;;;;;;;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;;;;;;:27;:::i;:::-;432:151;;:::o;259:181:2:-;-1:-1:-1;;;;;335:21:2;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;936:89:6:-;1006:12;;936:89;;:::o;1431:145:4:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;6198:263:6;-1:-1:-1;;;;;6272:21:6;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:16;;;;;;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:6;;;;;;:9;:18;;;;;;:29;;6397:5;6374:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:6;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o;786:162:2:-;858:4;-1:-1:-1;;;;;882:21:2;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:2;:11;:20;;;;;;;;;;;;;;;786:162::o;362:398:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;362:398:1;;;-1:-1:-1;362:398:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "362:398:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;362:398:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89;;;:::i;:::-;;;;;;;;;;;;;;;;3436:294;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3436:294:6;;;;;;;;;;;;;;;;;:::i;930:81:8:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;353:73:7;;;:::i;4233:317:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:6;;;;;;;;:::i;443:128:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:9;;;;;;;;:::i;1234:104:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:6;-1:-1:-1;;;;;1234:104:6;;:::i;1347:137:5:-;;;:::i;:::-;;659:77;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:5;;;;;;;;;;;;;;979:90;;;:::i;771:85:8:-;;;:::i;508:90:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:3;-1:-1:-1;;;;;508:90:3;;:::i;604:75::-;;;:::i;5058:327:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:6;;;;;;;;:::i;1962:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1962:137:6;;;;;;;;:::i;395:107:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:3;-1:-1:-1;;;;;395:107:3;;:::i;1669:129:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:6;;;;;;;;;;:::i;1655:107:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:5;-1:-1:-1;;;;;1655:107:5;;:::i;628:81:8:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:6:-;2800:4;-1:-1:-1;;;;;2824:21:6;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:6;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:6;2735:238;;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:6;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:6;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:6;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:6;3436:294;;;;;:::o;930:81:8:-;995:9;;;;930:81;:::o;353:73:7:-;415:4;;353:73;:::o;4233:317:6:-;4313:4;-1:-1:-1;;;;;4337:21:6;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:6;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:6;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:6;4233:317;;;;:::o;443:128:9:-;511:4;350:20:3;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:9;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:9;443:128;;;;:::o;1234:104:6:-;-1:-1:-1;;;;;1315:16:6;1289:7;1315:16;;;:9;:16;;;;;;;1234:104::o;1347:137:5:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:5;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;1458:19:5;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:5;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:5;1042:10;:20;;979:90::o;771:85:8:-;842:7;835:14;;;;;;;-1:-1:-1;;835:14:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:3;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5058:327:6:-;5143:4;-1:-1:-1;;;;;5167:21:6;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:6;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;395:107:3:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;1669:129:6:-;-1:-1:-1;;;;;1767:15:6;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1655:107:5:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;1205:145:4:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:4;;;1205:145::o;5599:256:6:-;-1:-1:-1;;;;;5686:16:6;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:6;;;;;;:9;:15;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:6;;;;;;;:9;:15;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:6;;;;;;;:9;:13;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;1431:145:4:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:4:o;432:151:7:-;534:4;;506:24;524:5;506:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;498:41;;;;;;549:27;561:7;570:5;549:11;:27::i;:::-;432:151;;:::o;685:119:3:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:3;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:3;;;;;;;;810:127;:::o;786:162:2:-;858:4;-1:-1:-1;;;;;882:21:2;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:2;:11;:20;;;;;;;;;;;;;;;786:162::o;1906:183:5:-;-1:-1:-1;;;;;1979:22:5;;;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:5;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;2065:17:5;-1:-1:-1;;;;;2065:17:5;;;;;;;;;;1906:183::o;6198:263:6:-;-1:-1:-1;;;;;6272:21:6;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:6;;;;;;:9;:18;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:6;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o;259:181:2:-;-1:-1:-1;;;;;335:21:2;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:2;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:2;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:2;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:2;;;514:184::o;229:421:4:-;287:7;527:6;;523:45;;;-1:-1:-1;556:1:4;549:8;;523:45;590:5;;;594:1;590;:5;613;;;;;;;;:10;605:19;;;;",
  "source": "pragma solidity 0.5.3;\n\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol';\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\n\n/**\n * @title Ocean Protocol ERC20 Token Contract\n * @author Ocean Protocol Team\n *\n * @dev Implementation of the Ocean Token.\n */\ncontract OceanToken is Ownable, ERC20Detailed, ERC20Capped {\n\n\tusing SafeMath for uint256;\n\n\tuint256 CAP = 1410000000;\n\tuint256 TOTALSUPPLY = CAP.mul(10 ** 18);\n\n\t/**\n\t* @dev OceanToken constructor\n\t*      Runs only on initial contract creation.\n\t*/\n\tconstructor()\n\t\tpublic\n\t\tERC20Detailed('OceanToken', 'OCEAN', 18)\n\t\tERC20Capped(TOTALSUPPLY)\n\t\tOwnable()\n\t{\n\t\t_mint(msg.sender, TOTALSUPPLY);\n\t}\n\n}\n",
  "sourcePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/4-uniswap/ocean-uniswap/ocean-token/contracts/OceanToken.sol",
  "ast": {
    "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/4-uniswap/ocean-uniswap/ocean-token/contracts/OceanToken.sol",
    "exportedSymbols": {
      "OceanToken": [
        102
      ]
    },
    "id": 103,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 103,
        "sourceUnit": 1026,
        "src": "24:69:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 103,
        "sourceUnit": 1084,
        "src": "94:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 103,
        "sourceUnit": 537,
        "src": "166:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 536,
              "src": "385:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$536",
                "typeString": "contract Ownable"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "385:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1083,
              "src": "394:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1083",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "394:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 66,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1025,
              "src": "409:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$1025",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 67,
            "nodeType": "InheritanceSpecifier",
            "src": "409:11:1"
          }
        ],
        "contractDependencies": [
          299,
          536,
          968,
          1025,
          1083,
          1111,
          1180
        ],
        "contractKind": "contract",
        "documentation": "@title Ocean Protocol ERC20 Token Contract\n@author Ocean Protocol Team\n * @dev Implementation of the Ocean Token.",
        "fullyImplemented": true,
        "id": 102,
        "linearizedBaseContracts": [
          102,
          1025,
          1111,
          299,
          968,
          1083,
          1180,
          536
        ],
        "name": "OceanToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 70,
            "libraryName": {
              "contractScope": null,
              "id": 68,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 427,
              "src": "431:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$427",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "425:27:1",
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 73,
            "name": "CAP",
            "nodeType": "VariableDeclaration",
            "scope": 102,
            "src": "455:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31343130303030303030",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "469:10:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1410000000_by_1",
                "typeString": "int_const 1410000000"
              },
              "value": "1410000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 81,
            "name": "TOTALSUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 102,
            "src": "482:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "482:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000"
                  },
                  "id": 79,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "hexValue": "3130",
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "512:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "518:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "src": "512:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000"
                  }
                ],
                "expression": {
                  "argumentTypes": null,
                  "id": 75,
                  "name": "CAP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 73,
                  "src": "504:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 76,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "mul",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 334,
                "src": "504:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "504:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "719:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "729:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "729:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "TOTALSUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "741:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 94,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1024
                      ],
                      "referencedDeclaration": 1024,
                      "src": "723:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "723:30:1"
                }
              ]
            },
            "documentation": "@dev OceanToken constructor\n     Runs only on initial contract creation.",
            "id": 101,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4f6365616e546f6b656e",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "652:12:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2d39094f09593ec41cfcddff0d5ad13d2ee95f280886d24fd40b4db7647ba656",
                      "typeString": "literal_string \"OceanToken\""
                    },
                    "value": "OceanToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4f4345414e",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "666:7:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_830ca272c972c279404c3fdb7703960e87c339a314aad4607ee9fa1e99a01f97",
                      "typeString": "literal_string \"OCEAN\""
                    },
                    "value": "OCEAN"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "675:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 83,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1083,
                  "src": "638:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1083_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "638:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 89,
                    "name": "TOTALSUPPLY",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81,
                    "src": "693:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 90,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 88,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1025,
                  "src": "681:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1025_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "681:24:1"
              },
              {
                "arguments": [],
                "id": 92,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 91,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 536,
                  "src": "708:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$536_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "708:9:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:2:1"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:1"
            },
            "scope": 102,
            "src": "613:144:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 103,
        "src": "362:398:1"
      }
    ],
    "src": "0:761:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/4-uniswap/ocean-uniswap/ocean-token/contracts/OceanToken.sol",
    "exportedSymbols": {
      "OceanToken": [
        102
      ]
    },
    "id": 103,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Capped.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 103,
        "sourceUnit": 1026,
        "src": "24:69:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 103,
        "sourceUnit": 1084,
        "src": "94:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 103,
        "sourceUnit": 537,
        "src": "166:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 536,
              "src": "385:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$536",
                "typeString": "contract Ownable"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "385:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1083,
              "src": "394:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$1083",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "394:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 66,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1025,
              "src": "409:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$1025",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 67,
            "nodeType": "InheritanceSpecifier",
            "src": "409:11:1"
          }
        ],
        "contractDependencies": [
          299,
          536,
          968,
          1025,
          1083,
          1111,
          1180
        ],
        "contractKind": "contract",
        "documentation": "@title Ocean Protocol ERC20 Token Contract\n@author Ocean Protocol Team\n * @dev Implementation of the Ocean Token.",
        "fullyImplemented": true,
        "id": 102,
        "linearizedBaseContracts": [
          102,
          1025,
          1111,
          299,
          968,
          1083,
          1180,
          536
        ],
        "name": "OceanToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 70,
            "libraryName": {
              "contractScope": null,
              "id": 68,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 427,
              "src": "431:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$427",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "425:27:1",
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 73,
            "name": "CAP",
            "nodeType": "VariableDeclaration",
            "scope": 102,
            "src": "455:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 71,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31343130303030303030",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "469:10:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1410000000_by_1",
                "typeString": "int_const 1410000000"
              },
              "value": "1410000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 81,
            "name": "TOTALSUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 102,
            "src": "482:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "482:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000"
                  },
                  "id": 79,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "hexValue": "3130",
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "512:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "518:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "src": "512:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                    "typeString": "int_const 1000000000000000000"
                  }
                ],
                "expression": {
                  "argumentTypes": null,
                  "id": 75,
                  "name": "CAP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 73,
                  "src": "504:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 76,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "mul",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 334,
                "src": "504:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "504:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "719:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "729:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "729:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "TOTALSUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "741:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 94,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1024
                      ],
                      "referencedDeclaration": 1024,
                      "src": "723:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "723:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "723:30:1"
                }
              ]
            },
            "documentation": "@dev OceanToken constructor\n     Runs only on initial contract creation.",
            "id": 101,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4f6365616e546f6b656e",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "652:12:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2d39094f09593ec41cfcddff0d5ad13d2ee95f280886d24fd40b4db7647ba656",
                      "typeString": "literal_string \"OceanToken\""
                    },
                    "value": "OceanToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4f4345414e",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "666:7:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_830ca272c972c279404c3fdb7703960e87c339a314aad4607ee9fa1e99a01f97",
                      "typeString": "literal_string \"OCEAN\""
                    },
                    "value": "OCEAN"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "675:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 87,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 83,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1083,
                  "src": "638:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1083_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "638:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 89,
                    "name": "TOTALSUPPLY",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81,
                    "src": "693:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 90,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 88,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1025,
                  "src": "681:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1025_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "681:24:1"
              },
              {
                "arguments": [],
                "id": 92,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 91,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 536,
                  "src": "708:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$536_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "708:9:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:2:1"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:1"
            },
            "scope": 102,
            "src": "613:144:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 103,
        "src": "362:398:1"
      }
    ],
    "src": "0:761:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xCC4d8eCFa6a5c1a84853EC5c0c08Cc54Cb177a6A",
      "transactionHash": "0xd17a0dc69f54f78aa9a158682dc5bd24c281de959e3a7545ecb7d3c60cdadeab"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-03-11T22:40:09.561Z",
  "devdoc": {
    "author": "Ocean Protocol Team",
    "details": "Implementation of the Ocean Token.",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "cap()": {
        "return": "the cap for the token minting."
      },
      "constructor": {
        "details": "OceanToken constructor     Runs only on initial contract creation."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Ocean Protocol ERC20 Token Contract"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}