{
  "contractName": "Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040805180820190915260058082527f546f6b656e00000000000000000000000000000000000000000000000000000060209092019182526100559160039161019b565b506040805180820190915260038082527f544b4e0000000000000000000000000000000000000000000000000000000000602090920191825261009a9160049161019b565b506b04860d8812f0b3887800000060058190556100c590339064010000000061070e6100ca82021704565b610236565b600160a060020a03821615156100df57600080fd5b6002546100f990826401000000006106f561018282021704565b600255600160a060020a03821660009081526020819052604090205461012c90826401000000006106f561018282021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561019457600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101dc57805160ff1916838001178555610209565b82800160010185558215610209579182015b828111156102095782518255916020019190600101906101ee565b50610215929150610219565b5090565b61023391905b80821115610215576000815560010161021f565b90565b6107e4806102456000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd1461019157806339509351146101bb57806370a08231146101df57806395d89b4114610200578063a457c2d714610215578063a9059cbb14610239578063dd62ed3e1461025d575b600080fd5b3480156100b457600080fd5b506100bd610284565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a0360043516602435610312565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f610390565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a0360043581169060243516604435610396565b3480156101c757600080fd5b50610156600160a060020a036004351660243561045f565b3480156101eb57600080fd5b5061017f600160a060020a036004351661050f565b34801561020c57600080fd5b506100bd61052a565b34801561022157600080fd5b50610156600160a060020a0360043516602435610585565b34801561024557600080fd5b50610156600160a060020a03600435166024356105d0565b34801561026957600080fd5b5061017f600160a060020a03600435811690602435166105e6565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b505050505081565b6000600160a060020a038316151561032957600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60055481565b600160a060020a03831660009081526001602090815260408083203384529091528120546103ca908363ffffffff61061116565b600160a060020a03851660009081526001602090815260408083203384529091529020556103f9848484610628565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a038316151561047657600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104aa908363ffffffff6106f516565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561030a5780601f106102df5761010080835404028352916020019161030a565b6000600160a060020a038316151561059c57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104aa908363ffffffff61061116565b60006105dd338484610628565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000808383111561062157600080fd5b5050900390565b600160a060020a038216151561063d57600080fd5b600160a060020a038316600090815260208190526040902054610666908263ffffffff61061116565b600160a060020a03808516600090815260208190526040808220939093559084168152205461069b908263ffffffff6106f516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561070757600080fd5b9392505050565b600160a060020a038216151561072357600080fd5b600254610736908263ffffffff6106f516565b600255600160a060020a038216600090815260208190526040902054610762908263ffffffff6106f516565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058201deb34269e570e728764bc787e3539564a859dec89ca0de8678a6ad4c1ae8e5b0029",
  "deployedBytecode": "0x6080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd1461019157806339509351146101bb57806370a08231146101df57806395d89b4114610200578063a457c2d714610215578063a9059cbb14610239578063dd62ed3e1461025d575b600080fd5b3480156100b457600080fd5b506100bd610284565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a0360043516602435610312565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f610390565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a0360043581169060243516604435610396565b3480156101c757600080fd5b50610156600160a060020a036004351660243561045f565b3480156101eb57600080fd5b5061017f600160a060020a036004351661050f565b34801561020c57600080fd5b506100bd61052a565b34801561022157600080fd5b50610156600160a060020a0360043516602435610585565b34801561024557600080fd5b50610156600160a060020a03600435166024356105d0565b34801561026957600080fd5b5061017f600160a060020a03600435811690602435166105e6565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b505050505081565b6000600160a060020a038316151561032957600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60055481565b600160a060020a03831660009081526001602090815260408083203384529091528120546103ca908363ffffffff61061116565b600160a060020a03851660009081526001602090815260408083203384529091529020556103f9848484610628565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a038316151561047657600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104aa908363ffffffff6106f516565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561030a5780601f106102df5761010080835404028352916020019161030a565b6000600160a060020a038316151561059c57600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104aa908363ffffffff61061116565b60006105dd338484610628565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000808383111561062157600080fd5b5050900390565b600160a060020a038216151561063d57600080fd5b600160a060020a038316600090815260208190526040902054610666908263ffffffff61061116565b600160a060020a03808516600090815260208190526040808220939093559084168152205461069b908263ffffffff6106f516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561070757600080fd5b9392505050565b600160a060020a038216151561072357600080fd5b600254610736908263ffffffff6106f516565b600255600160a060020a038216600090815260208190526040902054610762908263ffffffff6106f516565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058201deb34269e570e728764bc787e3539564a859dec89ca0de8678a6ad4c1ae8e5b0029",
  "sourceMap": "151:663:8:-;;;644:167;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;675:14:8;;;;;;;;;;;;;;;;;;;;;;;:4;;:14;:::i;:::-;-1:-1:-1;699:14:8;;;;;;;;;;;;;;;;;;;;;;;:6;;:14;:::i;:::-;-1:-1:-1;737:21:8;723:11;:35;;;768:36;;780:10;;768:11;;;;;;:36;:::i;:::-;151:663;;6189:263:4;-1:-1:-1;;;;;6263:21:4;;;;6255:30;;;;;;6311:12;;:23;;6328:5;6311:16;;;;;;:23;:::i;:::-;6296:12;:38;-1:-1:-1;;;;;6365:18:4;;:9;:18;;;;;;;;;;;:29;;6388:5;6365:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6344:18:4;;:9;:18;;;;;;;;;;;:50;;;;6409:36;;;;;;;6344:18;;:9;;6409:36;;;;;;;;;;6189:263;;:::o;1431:145:7:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:7:o;151:663:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;151:663:8;;;-1:-1:-1;151:663:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "151:663:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;279:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;279:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:238:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2726:238:4;-1:-1:-1;;;;;2726:238:4;;;;;;;;;;;;;;;;;;;;;;;;;471:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;471:26:8;;;;;;;;;;;;;;;;;;;;3427:294:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3427:294:4;-1:-1:-1;;;;;3427:294:4;;;;;;;;;;;;4224:317;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4224:317:4;-1:-1:-1;;;;;4224:317:4;;;;;;;1225:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1225:104:4;-1:-1:-1;;;;;1225:104:4;;;;;365:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:20:8;;;;5049:327:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5049:327:4;-1:-1:-1;;;;;5049:327:4;;;;;;;1953:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1953:137:4;-1:-1:-1;;;;;1953:137:4;;;;;;;1660:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1660:129:4;-1:-1:-1;;;;;1660:129:4;;;;;;;;;;279:18:8;;;;;;;;;;;;;;;-1:-1:-1;;279:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2726:238:4:-;2791:4;-1:-1:-1;;;;;2815:21:4;;;;2807:30;;;;;;2857:10;2848:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2848:29:4;;;;;;;;;;;;:37;;;2900:36;;;;;;;2848:29;;2857:10;2900:36;;;;;;;;;;;-1:-1:-1;2953:4:4;2726:238;;;;:::o;471:26:8:-;;;;:::o;3427:294:4:-;-1:-1:-1;;;;;3551:14:4;;3506:4;3551:14;;;:8;:14;;;;;;;;3566:10;3551:26;;;;;;;;:37;;3582:5;3551:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3522:14:4;;;;;;:8;:14;;;;;;;;3537:10;3522:26;;;;;;;:66;3598:26;3531:4;3614:2;3618:5;3598:9;:26::i;:::-;-1:-1:-1;;;;;3639:54:4;;3666:14;;;;:8;:14;;;;;;;;3654:10;3666:26;;;;;;;;;;;3639:54;;;;;;;3654:10;;3639:54;;;;;;;;;;;;-1:-1:-1;3710:4:4;3427:294;;;;;:::o;4224:317::-;4304:4;-1:-1:-1;;;;;4328:21:4;;;;4320:30;;;;;;4402:10;4393:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4393:29:4;;;;;;;;;;:45;;4427:10;4393:45;:33;:45;:::i;:::-;4370:10;4361:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4361:29:4;;;;;;;;;;;;:77;;;4453:60;;;;;;4361:29;;4453:60;;;;;;;;;;;-1:-1:-1;4530:4:4;4224:317;;;;:::o;1225:104::-;-1:-1:-1;;;;;1306:16:4;1280:7;1306:16;;;;;;;;;;;;1225:104::o;365:20:8:-;;;;;;;;;;;;;;;-1:-1:-1;;365:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5049:327:4;5134:4;-1:-1:-1;;;;;5158:21:4;;;;5150:30;;;;;;5232:10;5223:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5223:29:4;;;;;;;;;;:50;;5257:15;5223:50;:33;:50;:::i;1953:137::-;2014:4;2030:32;2040:10;2052:2;2056:5;2030:9;:32::i;:::-;-1:-1:-1;2079:4:4;1953:137;;;;:::o;1660:129::-;-1:-1:-1;;;;;1758:15:4;;;1732:7;1758:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1660:129::o;1205:145:7:-;1263:7;;1290:6;;;;1282:15;;;;;;-1:-1:-1;;1319:5:7;;;1205:145::o;5590:256:4:-;-1:-1:-1;;;;;5677:16:4;;;;5669:25;;;;;;-1:-1:-1;;;;;5723:15:4;;:9;:15;;;;;;;;;;;:26;;5743:5;5723:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5705:15:4;;;:9;:15;;;;;;;;;;;:44;;;;5775:13;;;;;;;:24;;5793:5;5775:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5759:13:4;;;:9;:13;;;;;;;;;;;;:40;;;;5814:25;;;;;;;5759:13;;5814:25;;;;;;;;;;;;;5590:256;;;:::o;1431:145:7:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:7:o;6189:263:4:-;-1:-1:-1;;;;;6263:21:4;;;;6255:30;;;;;;6311:12;;:23;;6328:5;6311:23;:16;:23;:::i;:::-;6296:12;:38;-1:-1:-1;;;;;6365:18:4;;:9;:18;;;;;;;;;;;:29;;6388:5;6365:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6344:18:4;;:9;:18;;;;;;;;;;;:50;;;;6409:36;;;;;;;6344:18;;:9;;6409:36;;;;;;;;;;6189:263;;:::o",
  "source": "pragma solidity 0.4.25;\n\nimport \"../library/ERC20.sol\";\n\n/**\n * @title Ocean Token\n * @dev Ocean ERC20 tokens with token mining and distribution.\n */\n\ncontract Token is ERC20 {\n\n    using SafeMath for uint256;\n\n    // ============\n    // DATA STRUCTURES:\n    // ============\n    string public name;                             // Set the token name for display\n    string public symbol;                           // Set the token symbol for display\n\n    // constants\n    uint256 public totalSupply;                   // OceanToken total supply\n\n    /**\n    * @dev OceanToken Constructor\n    * Runs only on initial contract creation.\n    */\n    constructor() public {\n        name = 'Token';\n        symbol = 'TKN';\n        totalSupply = 1400000000 * 10 ** 18;\n        super._mint(msg.sender, totalSupply);\n    }\n\n}\n",
  "sourcePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/2-signaling-mechanism/2-shot-sell-bc/prototype/contracts/token/Token.sol",
  "ast": {
    "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/2-signaling-mechanism/2-shot-sell-bc/prototype/contracts/token/Token.sol",
    "exportedSymbols": {
      "Token": [
        4093
      ]
    },
    "id": 4094,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4052,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/2-signaling-mechanism/2-shot-sell-bc/prototype/contracts/library/ERC20.sol",
        "file": "../library/ERC20.sol",
        "id": 4053,
        "nodeType": "ImportDirective",
        "scope": 4094,
        "sourceUnit": 3745,
        "src": "25:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4054,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3744,
              "src": "169:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3744",
                "typeString": "contract ERC20"
              }
            },
            "id": 4055,
            "nodeType": "InheritanceSpecifier",
            "src": "169:5:8"
          }
        ],
        "contractDependencies": [
          3744,
          3813
        ],
        "contractKind": "contract",
        "documentation": "@title Ocean Token\n@dev Ocean ERC20 tokens with token mining and distribution.",
        "fullyImplemented": true,
        "id": 4093,
        "linearizedBaseContracts": [
          4093,
          3744,
          3813
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4058,
            "libraryName": {
              "contractScope": null,
              "id": 4056,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4050,
              "src": "188:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4050",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "182:27:8",
            "typeName": {
              "id": 4057,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 4060,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 4093,
            "src": "279:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4059,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "279:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4062,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 4093,
            "src": "365:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4061,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "365:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4064,
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 4093,
            "src": "471:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4063,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4091,
              "nodeType": "Block",
              "src": "665:146:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4067,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4060,
                      "src": "675:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "546f6b656e",
                      "id": 4068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "682:7:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                        "typeString": "literal_string \"Token\""
                      },
                      "value": "Token"
                    },
                    "src": "675:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4070,
                  "nodeType": "ExpressionStatement",
                  "src": "675:14:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4071,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4062,
                      "src": "699:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "544b4e",
                      "id": 4072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "708:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                        "typeString": "literal_string \"TKN\""
                      },
                      "value": "TKN"
                    },
                    "src": "699:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4074,
                  "nodeType": "ExpressionStatement",
                  "src": "699:14:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4075,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4064
                      ],
                      "referencedDeclaration": 4064,
                      "src": "723:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1400000000000000000000000000_by_1",
                        "typeString": "int_const 1400000000000000000000000000"
                      },
                      "id": 4080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31343030303030303030",
                        "id": 4076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "737:10:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1400000000_by_1",
                          "typeString": "int_const 1400000000"
                        },
                        "value": "1400000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 4079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 4077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "750:2:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 4078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "756:2:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "750:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "737:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1400000000000000000000000000_by_1",
                        "typeString": "int_const 1400000000000000000000000000"
                      }
                    },
                    "src": "723:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4082,
                  "nodeType": "ExpressionStatement",
                  "src": "723:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4086,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4108,
                          "src": "780:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "780:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4088,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4064
                        ],
                        "referencedDeclaration": 4064,
                        "src": "792:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4083,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4134,
                        "src": "768:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$4093",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "768:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4090,
                  "nodeType": "ExpressionStatement",
                  "src": "768:36:8"
                }
              ]
            },
            "documentation": "@dev OceanToken Constructor\nRuns only on initial contract creation.",
            "id": 4092,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 4066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:0:8"
            },
            "scope": 4093,
            "src": "644:167:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4094,
        "src": "151:663:8"
      }
    ],
    "src": "0:815:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/2-signaling-mechanism/2-shot-sell-bc/prototype/contracts/token/Token.sol",
    "exportedSymbols": {
      "Token": [
        4093
      ]
    },
    "id": 4094,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4052,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/fancy/Documents/Ocean Protocol/research/16-research-repo/research/2-signaling-mechanism/2-shot-sell-bc/prototype/contracts/library/ERC20.sol",
        "file": "../library/ERC20.sol",
        "id": 4053,
        "nodeType": "ImportDirective",
        "scope": 4094,
        "sourceUnit": 3745,
        "src": "25:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4054,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3744,
              "src": "169:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3744",
                "typeString": "contract ERC20"
              }
            },
            "id": 4055,
            "nodeType": "InheritanceSpecifier",
            "src": "169:5:8"
          }
        ],
        "contractDependencies": [
          3744,
          3813
        ],
        "contractKind": "contract",
        "documentation": "@title Ocean Token\n@dev Ocean ERC20 tokens with token mining and distribution.",
        "fullyImplemented": true,
        "id": 4093,
        "linearizedBaseContracts": [
          4093,
          3744,
          3813
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4058,
            "libraryName": {
              "contractScope": null,
              "id": 4056,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4050,
              "src": "188:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4050",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "182:27:8",
            "typeName": {
              "id": 4057,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 4060,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 4093,
            "src": "279:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4059,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "279:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4062,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 4093,
            "src": "365:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4061,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "365:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4064,
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 4093,
            "src": "471:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4063,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4091,
              "nodeType": "Block",
              "src": "665:146:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4067,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4060,
                      "src": "675:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "546f6b656e",
                      "id": 4068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "682:7:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                        "typeString": "literal_string \"Token\""
                      },
                      "value": "Token"
                    },
                    "src": "675:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4070,
                  "nodeType": "ExpressionStatement",
                  "src": "675:14:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4071,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4062,
                      "src": "699:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "544b4e",
                      "id": 4072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "708:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                        "typeString": "literal_string \"TKN\""
                      },
                      "value": "TKN"
                    },
                    "src": "699:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4074,
                  "nodeType": "ExpressionStatement",
                  "src": "699:14:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4075,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4064
                      ],
                      "referencedDeclaration": 4064,
                      "src": "723:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1400000000000000000000000000_by_1",
                        "typeString": "int_const 1400000000000000000000000000"
                      },
                      "id": 4080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31343030303030303030",
                        "id": 4076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "737:10:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1400000000_by_1",
                          "typeString": "int_const 1400000000"
                        },
                        "value": "1400000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 4079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 4077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "750:2:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 4078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "756:2:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "750:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "737:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1400000000000000000000000000_by_1",
                        "typeString": "int_const 1400000000000000000000000000"
                      }
                    },
                    "src": "723:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4082,
                  "nodeType": "ExpressionStatement",
                  "src": "723:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4086,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4108,
                          "src": "780:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "780:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4088,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4064
                        ],
                        "referencedDeclaration": 4064,
                        "src": "792:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4083,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4134,
                        "src": "768:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$4093",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3659,
                      "src": "768:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4090,
                  "nodeType": "ExpressionStatement",
                  "src": "768:36:8"
                }
              ]
            },
            "documentation": "@dev OceanToken Constructor\nRuns only on initial contract creation.",
            "id": 4092,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 4066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:0:8"
            },
            "scope": 4093,
            "src": "644:167:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4094,
        "src": "151:663:8"
      }
    ],
    "src": "0:815:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "1549924637901": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0xF98de320F6F2C394f2063f4Db03cC45C497D878F",
      "transactionHash": "0xac82de22007f662a1123617621b56a7e68791b7c85ef52826dd671b2072cf804"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-11T23:53:14.253Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Ocean Token"
  },
  "userdoc": {
    "methods": {}
  }
}